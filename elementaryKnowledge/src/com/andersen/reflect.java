package com.andersen;import java.lang.reflect.Field;import java.lang.reflect.Method;/** 一切皆对象，类也是对象，是java.lang.Class的实例* 获取类类型信息的方法有三；* 1.Class democlass = Demo.class* 2.Class democlass = new Demo().getClass()* 3.Class democlass =Class.forName('')* 通过类类型生产新的对象* democlass.getInstance()** */public class reflect {    public static void main(String[] args) {        Integer integer = 1;        new reflect().getObjInfo(integer);    }    public void getObjInfo(Object obj){        Class<?> aClass = obj.getClass();//        System.out.println(aClass.getName());        /*获取对象的所有public方法*/        Method[] methods = aClass.getMethods();        /*获取所对象所有方法，不管权限*///        Method[] methods = aClass.getDeclaredMethods();        /*获取成员变量*/       Field[] field = aClass.getFields();        for(int i = 0;i<field.length;i++){//            获取方法的返回值类型//            Class returnType = methods[i].getReturnType();//            System.out.println(methods[i].getName()+"  "+returnType.getName());            System.out.println(field[i].getName());        }    }}class myobj{    public void outString(){        System.out.println("我是第一个方法");    }    public void printMyName(){        System.out.println("张浩");    }    private void notAllowMethod(){        System.out.println("你已非法侵入我的内部");    }}